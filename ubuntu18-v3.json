{
  "AWSTemplateFormatVersion": "2010-09-09",

  "Description": "Installing Cloudformation helper scripts in Ubuntu 18.04 LTS",

  "Parameters": {
    "KeyName": {
      "Description": "Name of an existing EC2 KeyPair to enable SSH access to the instance",
      "Type": "AWS::EC2::KeyPair::KeyName",
      "Default": "EC2_Tutorial_Lab02",
      "ConstraintDescription": "must be the name of an existing key pair"
    },

    "Subnets": {
      "Type": "List<AWS::EC2::Subnet::Id>",
      "Description": "The list of SubnetIds in your Virtual Private Cloud (VPC)",
      "Default": "subnet-56e59531,subnet-13c9b63d,subnet-46b7b70c",
      "ConstraintDescription": "must be a list of at least two existing subnets associated with at least two different availability zones. They should be residing in the selected Virtual Private Cloud."
    },

    "InstanceType": {
      "Description": "WebServer EC2 instance type",
      "Type": "String",
      "Default": "t2.micro",
      "AllowedValues": [ "t1.micro", "t2.nano", "t2.micro", "t2.small", "t2.medium", "t2.large", "m1.small", "m1.medium", "m1.large", "m1.xlarge", "m2.xlarge", "m2.2xlarge", "m2.4xlarge", "m3.medium", "m3.large", "m3.xlarge", "m3.2xlarge", "m4.large", "m4.xlarge", "m4.2xlarge", "m4.4xlarge", "m4.10xlarge", "c1.medium", "c1.xlarge", "c3.large", "c3.xlarge", "c3.2xlarge", "c3.4xlarge", "c3.8xlarge", "c4.large", "c4.xlarge", "c4.2xlarge", "c4.4xlarge", "c4.8xlarge", "g2.2xlarge", "g2.8xlarge", "r3.large", "r3.xlarge", "r3.2xlarge", "r3.4xlarge", "r3.8xlarge", "i2.xlarge", "i2.2xlarge", "i2.4xlarge", "i2.8xlarge", "d2.xlarge", "d2.2xlarge", "d2.4xlarge", "d2.8xlarge", "hi1.4xlarge", "hs1.8xlarge", "cr1.8xlarge", "cc2.8xlarge", "cg1.4xlarge" ],
      "ConstraintDescription": "must be a valid EC2 instance type."
    },
    "AmiId": {
      "Description": "Ubuntu 18.04 LTS Ami Id",
      "Type": "String",
      "Default": "ami-0a313d6098716f372"
    },

    "SSHLocation": {
      "Description": "The IP address range that can be used to SSH to the EC2 instances",
      "Type": "String",
      "MinLength": "9",
      "MaxLength": "18",
      "Default": "0.0.0.0/0",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
      "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x."
    }
  },

  "Resources": {
    "InstanceSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Enable SSH access via port 22 and port 80",
        "Tags": [
          {
            "Key": "Name",
            "Value": "sg-devops"
          }
        ],
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": "22",
            "ToPort": "22",
            "CidrIp": { "Ref": "SSHLocation" }
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "80",
            "ToPort": "80",
            "CidrIp": { "Ref": "SSHLocation" }
          }
        ]
      }
    },
    "gldevops01": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "InstanceType": { "Ref": "InstanceType" },
        "SecurityGroupIds": [
          {
            "Fn::GetAtt": [
              "InstanceSecurityGroup",
              "GroupId"
            ]
          }
        ],
        "KeyName": { "Ref": "KeyName" },
        "ImageId": { "Ref": "AmiId" },
        "SubnetId": "subnet-56e59531",
        "Tags": [
          {
            "Key": "Name",
            "Value": "gl-devops01"
          }
        ],
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "",
              [
                "#!/bin/bash -xe \n",
                "apt-get update -y \n",
                "apt-get install -y apache2\n"
              ]
            ]
          }
        }
      }
    },
    "gldevops02": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "InstanceType": { "Ref": "InstanceType" },
        "SecurityGroupIds": [
          {
            "Fn::GetAtt": [
              "InstanceSecurityGroup",
              "GroupId"
            ]
          }
        ],
        "KeyName": { "Ref": "KeyName" },
        "ImageId": { "Ref": "AmiId" },
        "SubnetId": "subnet-13c9b63d",
        "Tags": [
          {
            "Key": "Name",
            "Value": "gl-devops02"
          }
        ],
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "",
              [
                "#!/bin/bash -xe \n",
                "apt-get update -y \n",
                "apt-get install -y apache2\n"
              ]
            ]
          }
        }
      }
    },
    "gldevops03": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "InstanceType": { "Ref": "InstanceType" },
        "SecurityGroupIds": [
          {
            "Fn::GetAtt": [
              "InstanceSecurityGroup",
              "GroupId"
            ]
          }
        ],
        "KeyName": { "Ref": "KeyName" },
        "ImageId": { "Ref": "AmiId" },
        "SubnetId": "subnet-46b7b70c",
        "Tags": [
          {
            "Key": "Name",
            "Value": "gl-devops03"
          }
        ],
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "",
              [
                "#!/bin/bash -xe \n",
                "apt-get update -y \n",
                "apt-get install -y apache2\n"
              ]
            ]
          }
        }
      }
    },
    "EC2NetworkLoadBalancer": {
      "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
      "Properties": {
        "Name": "EC2-nlb",
        "Scheme": "internet-facing",
        "Subnets": { "Ref": "Subnets" },
        "Type": "network",
        "Tags": [
          {
            "Key": "Name",
            "Value": "EC2-nlb"
          }
        ]
      }
    },
    "EC2TargetGroup": {
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
      "Properties": {
        "Port": "80",
        "Protocol": "TCP",
        "VpcId": "vpc-fa41cd80",
        "Targets": [
          {
            "Id": { "Ref": "gldevops01" }
          },
          {
            "Id": { "Ref": "gldevops02" }
          },
          {
            "Id": { "Ref": "gldevops03" }
          }
        ]
      }
    },
    "EC2NLBListener": {
      "Type": "AWS::ElasticLoadBalancingV2::Listener",
      "Properties": {
        "DefaultActions": [
          {
            "Type": "forward",
            "TargetGroupArn": { "Ref": "EC2TargetGroup" }
          }
        ],
        "LoadBalancerArn": { "Ref": "EC2NetworkLoadBalancer" },
        "Port": "80",
        "Protocol": "TCP"
      }
    }
  },
  "Outputs": {
    "EC2LoadBalancerDNSName": {
      "Description": "DNS Url of the loadbalancer created through stack",
      "Value": { "Fn::GetAtt": [ "EC2NetworkLoadBalancer", "DNSName" ] }
    }
  }
}
